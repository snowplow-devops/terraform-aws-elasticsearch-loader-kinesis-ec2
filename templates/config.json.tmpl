input = {
  type = "kinesis"
  streamName = "${in_stream_name}"
  initialPosition = "${initial_position}"
  maxRecords = 10000
  region = "${region}"
  appName = "${app_name}"
  buffer {
    byteLimit = ${buffer_byte_limit}
    recordLimit = ${buffer_record_limit}
    timeLimit = ${buffer_time_limit_ms}
  }
}
output = {
  good = {
    type = "elasticsearch"
    client = {
      endpoint = "${es_cluster_endpoint}"
      port = "${es_cluster_port}"
%{ if es_cluster_basicauth_enabled ~}
      username = "${es_cluster_username}"
      password = "${es_cluster_password}"
%{ endif ~}
%{ if es_cluster_sharding_enabled ~}
      shardDateFormat = "${es_cluster_shard_date_format}"
      shardDateField = "${es_cluster_shard_date_field}"
%{ endif ~}
      maxTimeout = 10000
      maxRetries = 6
      ssl = ${es_cluster_http_ssl_enabled}
    }
    aws {
      signing = ${aws_es_request_signing_enabled}
      region = "${aws_es_region}"
    }
    cluster {
      index = "${es_cluster_index}"
%{ if es_cluster_document_type_set ~}
      documentType = "${es_cluster_document_type}"
%{ endif ~}
    }
    chunk = {
      byteLimit = ${chunk_byte_limit}
      recordLimit = ${chunk_record_limit} 
    }
  }
  bad = {
    type = "kinesis"
    streamName = "${bad_stream_name}"
    region = "${region}"
  }
}
purpose: "${in_stream_type}"
monitoring = {
  metrics = {
    cloudWatch = false
  }
}
